{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "\n",
    "# Import CSV of fitbit weartime using heartrates\n",
    "df = pd.read_csv('fitbitWearTimeViaHR_merged.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Handle the weartime data: return Ids, average wear time via heartrate data, number of days worn, and largest strand of consecutive days worn."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Day</th>\n",
       "      <th>TotalMinutesWearTime</th>\n",
       "      <th>PercentageWearTime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10001</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10001</td>\n",
       "      <td>2024-10-05</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10001</td>\n",
       "      <td>2024-10-06</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10001</td>\n",
       "      <td>2024-10-07</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4947</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-06</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4948</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-07</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4949</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-08</td>\n",
       "      <td>1</td>\n",
       "      <td>0.069444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4950</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>72</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4951</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4952 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Id        Day  TotalMinutesWearTime  PercentageWearTime\n",
       "0     10001 2024-10-03                     0            0.000000\n",
       "1     10001 2024-10-04                     0            0.000000\n",
       "2     10001 2024-10-05                     0            0.000000\n",
       "3     10001 2024-10-06                     0            0.000000\n",
       "4     10001 2024-10-07                     0            0.000000\n",
       "...     ...        ...                   ...                 ...\n",
       "4947  56214 2024-10-06                     0            0.000000\n",
       "4948  56214 2024-10-07                     0            0.000000\n",
       "4949  56214 2024-10-08                     1            0.069444\n",
       "4950  56214 2024-10-09                    72            5.000000\n",
       "4951  56214 2024-10-10                     0            0.000000\n",
       "\n",
       "[4952 rows x 4 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Day'] = pd.to_datetime(df['Day'], format='%m/%d/%Y', errors='coerce')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>AverageWearTime</th>\n",
       "      <th>DaysWorn</th>\n",
       "      <th>ConsecutiveDaysWorn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10101</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10102</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10103</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10104</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>56210</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>56211</td>\n",
       "      <td>85.685764</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>616</th>\n",
       "      <td>56212</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>617</th>\n",
       "      <td>56213</td>\n",
       "      <td>68.611111</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>56214</td>\n",
       "      <td>0.729167</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>619 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Id  AverageWearTime  DaysWorn  ConsecutiveDaysWorn\n",
       "0    10001         0.000000       0.0                  0.0\n",
       "1    10101         0.000000       0.0                  0.0\n",
       "2    10102         0.000000       0.0                  0.0\n",
       "3    10103         0.000000       0.0                  0.0\n",
       "4    10104         0.000000       0.0                  0.0\n",
       "..     ...              ...       ...                  ...\n",
       "614  56210         0.000000       0.0                  0.0\n",
       "615  56211        85.685764       8.0                  8.0\n",
       "616  56212         0.000000       0.0                  0.0\n",
       "617  56213        68.611111       7.0                  5.0\n",
       "618  56214         0.729167       4.0                  2.0\n",
       "\n",
       "[619 rows x 4 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Return wear time and sync data stats!\n",
    "\n",
    "# FIND CONSECUTIVE DAYS\n",
    "def consecutive_days(group, minsGroup = None):\n",
    "    conDays = 0\n",
    "    currentStreak = 0\n",
    "    previousDay = None\n",
    "\n",
    "    for i, dateTime in enumerate(group):\n",
    "        currentDay = dateTime\n",
    "        if(previousDay is None or abs((currentDay - previousDay).days) == 1):\n",
    "            if(minsGroup is not None):\n",
    "                if(minsGroup.iloc[i] > 0):\n",
    "                    currentStreak += 1\n",
    "                else:\n",
    "                    currentStreak = 0\n",
    "            else:\n",
    "                currentStreak += 1\n",
    "            if(currentStreak > conDays):\n",
    "                conDays = currentStreak\n",
    "        else :\n",
    "            if(abs((currentDay - previousDay).days) != 0):\n",
    "                currentStreak = 1\n",
    "        previousDay = currentDay\n",
    "    return conDays\n",
    "    \n",
    "\n",
    "# We will keep track of average documented weartime, total number of days worn, number of syncs, and last time synced.\n",
    "reminder_wearDf = df.groupby('Id').apply(lambda x: pd.Series({\n",
    "    'AverageWearTime': x['PercentageWearTime'].mean(),\n",
    "    'DaysWorn': (x['TotalMinutesWearTime'] > 0).sum(),\n",
    "    'ConsecutiveDaysWorn': consecutive_days(x['Day'], x['TotalMinutesWearTime'])\n",
    "})).reset_index()\n",
    "reminder_wearDf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Handle the sync data: return Ids, last day synced, number of days synced, and largest strand of consecutive days synced."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>DateTime</th>\n",
       "      <th>SyncDateUTC</th>\n",
       "      <th>Provider</th>\n",
       "      <th>DeviceName</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>10/3/2024 5:06:10 AM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>10/3/2024 5:21:16 AM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>10/3/2024 5:36:21 AM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>10/3/2024 5:51:28 AM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>10/3/2024 6:06:34 AM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35450</th>\n",
       "      <td>56213</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>10/9/2024 6:09:16 PM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35451</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>10/9/2024 2:03:58 PM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35452</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>10/9/2024 10:15:51 PM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35453</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>10/10/2024 12:09:37 PM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35454</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>10/10/2024 1:10:54 PM</td>\n",
       "      <td>Fitbit</td>\n",
       "      <td>Inspire 3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35455 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Id    DateTime             SyncDateUTC Provider DeviceName\n",
       "0      51102  2024-10-03    10/3/2024 5:06:10 AM   Fitbit  Inspire 3\n",
       "1      51102  2024-10-03    10/3/2024 5:21:16 AM   Fitbit  Inspire 3\n",
       "2      51102  2024-10-03    10/3/2024 5:36:21 AM   Fitbit  Inspire 3\n",
       "3      51102  2024-10-03    10/3/2024 5:51:28 AM   Fitbit  Inspire 3\n",
       "4      51102  2024-10-03    10/3/2024 6:06:34 AM   Fitbit  Inspire 3\n",
       "...      ...         ...                     ...      ...        ...\n",
       "35450  56213  2024-10-09    10/9/2024 6:09:16 PM   Fitbit  Inspire 3\n",
       "35451  56214  2024-10-09    10/9/2024 2:03:58 PM   Fitbit  Inspire 3\n",
       "35452  56214  2024-10-09   10/9/2024 10:15:51 PM   Fitbit  Inspire 3\n",
       "35453  56214  2024-10-10  10/10/2024 12:09:37 PM   Fitbit  Inspire 3\n",
       "35454  56214  2024-10-10   10/10/2024 1:10:54 PM   Fitbit  Inspire 3\n",
       "\n",
       "[35455 rows x 5 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read sync data\n",
    "syncDf = pd.read_csv('syncEvents_merged.csv')\n",
    "syncDf['DateTime'] = pd.to_datetime(syncDf['DateTime'], format='%m/%d/%Y %I:%M:%S %p', errors='coerce').dt.date\n",
    "\n",
    "\n",
    "syncDf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>LastDaySynced</th>\n",
       "      <th>DaysSynced</th>\n",
       "      <th>ConsecutiveDaysSynced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>51102</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>51103</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>51105</td>\n",
       "      <td>2024-10-07</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>51106</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>51110</td>\n",
       "      <td>2024-10-03</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>56111</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>56112</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>56211</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>56213</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>56214</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Id LastDaySynced  DaysSynced  ConsecutiveDaysSynced\n",
       "0    51102    2024-10-10           6                      4\n",
       "1    51103    2024-10-10           8                      8\n",
       "2    51105    2024-10-07           5                      5\n",
       "3    51106    2024-10-10           5                      3\n",
       "4    51110    2024-10-03           1                      1\n",
       "..     ...           ...         ...                    ...\n",
       "98   56111    2024-10-10           8                      8\n",
       "99   56112    2024-10-10           3                      3\n",
       "100  56211    2024-10-10           4                      2\n",
       "101  56213    2024-10-09           4                      4\n",
       "102  56214    2024-10-10           2                      2\n",
       "\n",
       "[103 rows x 4 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to determine days synced\n",
    "def uniqueDays(group):\n",
    "    days = 0\n",
    "    previousDay = None\n",
    "\n",
    "    for dateTime in group:\n",
    "        currentDay = str(dateTime)\n",
    "        if(previousDay is None or currentDay[8:10] != previousDay[8:10]):\n",
    "            days += 1\n",
    "        previousDay = currentDay\n",
    "    return days\n",
    "\n",
    "\n",
    "# Sort last day synced and total number of syncs\n",
    "reminder_syncDf = syncDf.groupby('Id').agg(\n",
    "    LastDaySynced = ('DateTime', 'last'),\n",
    "    DaysSynced = ('DateTime', uniqueDays),\n",
    "    ConsecutiveDaysSynced = ('DateTime', consecutive_days)\n",
    ").reset_index()\n",
    "\n",
    "reminder_syncDf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Combine weartime and sync dataframes! (NaN may appear where data is missing.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>AverageWearTime</th>\n",
       "      <th>DaysWorn</th>\n",
       "      <th>ConsecutiveDaysWorn</th>\n",
       "      <th>LastDaySynced</th>\n",
       "      <th>DaysSynced</th>\n",
       "      <th>ConsecutiveDaysSynced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10101</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10102</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10103</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10104</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>56210</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>56211</td>\n",
       "      <td>85.685764</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>616</th>\n",
       "      <td>56212</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>617</th>\n",
       "      <td>56213</td>\n",
       "      <td>68.611111</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2024-10-09</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>56214</td>\n",
       "      <td>0.729167</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2024-10-10</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>619 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Id  AverageWearTime  DaysWorn  ConsecutiveDaysWorn LastDaySynced  \\\n",
       "0    10001         0.000000       0.0                  0.0             0   \n",
       "1    10101         0.000000       0.0                  0.0             0   \n",
       "2    10102         0.000000       0.0                  0.0             0   \n",
       "3    10103         0.000000       0.0                  0.0             0   \n",
       "4    10104         0.000000       0.0                  0.0             0   \n",
       "..     ...              ...       ...                  ...           ...   \n",
       "614  56210         0.000000       0.0                  0.0             0   \n",
       "615  56211        85.685764       8.0                  8.0    2024-10-10   \n",
       "616  56212         0.000000       0.0                  0.0             0   \n",
       "617  56213        68.611111       7.0                  5.0    2024-10-09   \n",
       "618  56214         0.729167       4.0                  2.0    2024-10-10   \n",
       "\n",
       "     DaysSynced  ConsecutiveDaysSynced  \n",
       "0           0.0                    0.0  \n",
       "1           0.0                    0.0  \n",
       "2           0.0                    0.0  \n",
       "3           0.0                    0.0  \n",
       "4           0.0                    0.0  \n",
       "..          ...                    ...  \n",
       "614         0.0                    0.0  \n",
       "615         4.0                    2.0  \n",
       "616         0.0                    0.0  \n",
       "617         4.0                    4.0  \n",
       "618         2.0                    2.0  \n",
       "\n",
       "[619 rows x 7 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Combine Weartime and Sync dataframes\n",
    "reminder_df = pd.merge(reminder_wearDf, reminder_syncDf, on = 'Id', how = 'outer')\n",
    "reminder_df.fillna(0, inplace=True)\n",
    "reminder_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ignore personalized messages for now:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Determine what messages people should receive?\n",
    "# Set threshold values for consistency\n",
    "# min_consecutive_days_worn = 3\n",
    "# min_average_wear_time = 50.0\n",
    "# max_days_not_synced = 3\n",
    "\n",
    "# # Generate personalized reminders\n",
    "# reminder_df['Reminder'] = ''\n",
    "\n",
    "# for index, row in reminder_df.iterrows():\n",
    "#     reminder = ''\n",
    "    \n",
    "#     if row['ConsecutiveDaysWorn'] < min_consecutive_days_worn:\n",
    "#         reminder += f\"You have only worn the device for {row['ConsecutiveDaysWorn']} consecutive days in the last month. Please aim to wear it for at least {min_consecutive_days_worn} consecutive days! \"\n",
    "    \n",
    "#     if row['AverageWearTime'] < min_average_wear_time:\n",
    "#         reminder += f\"In the last month, your average wear time was {row['AverageWearTime']:.2f}%. Next month, please remember to wear it more consistently to further help our reseach. Let's aim for {min_consecutive_days_worn} consecutive days!\"\n",
    "    \n",
    "#     last_sync_date = pd.to_datetime(row['LastDaySynced'])\n",
    "#     days_since_last_sync = (pd.Timestamp.now() - last_sync_date).days\n",
    "    \n",
    "#     if days_since_last_sync > max_days_not_synced:\n",
    "#         reminder += f\"It has been {days_since_last_sync} days since your last sync. Please remember to sync your device regularly. \"\n",
    "    \n",
    "#     if row['ConsecutiveDaysSynced'] < min_consecutive_days_worn:\n",
    "#         reminder += f\"You have only synced the device for {row['ConsecutiveDaysSynced']} consecutive days. Please aim to sync it for at least {min_consecutive_days_worn} consecutive days. \"\n",
    "    \n",
    "#     if reminder == '':\n",
    "#         reminder = \"Great job! You have been wearing and syncing your device consistently. Keep up the good work!\"\n",
    "    \n",
    "#     reminder_df.at[index, 'Reminder'] = reminder.strip()\n",
    "\n",
    "# reminder_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Return a new CSV file, reminder_ids.csv, with all of the data!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save the reminders to a CSV file\n",
    "reminder_df.to_csv('reminder_ids.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
